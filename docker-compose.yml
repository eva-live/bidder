#
# Contains the full rtb4free stack (zookeeper, kafka, zerospike, bidder, crosstalk, db, web, elastic1, logstash1, simulator)
#
version: '3.5'

services:

  zookeeper:
    image: zookeeper:3.5
    ports:
      - '2181:2181'
    networks:
      - r4f_net

  kafka:
    image: 'ches/kafka'
    environment:
      ZOOKEEPER_IP: 'zookeeper'
    ports:
      - '9092:9092'
    healthcheck:
      test: ["CMD", ...]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - zookeeper
    networks:
      - r4f_net

  zerospike:
    image: rtb4free/zerospike
    environment:
      BROKERLIST: "kafka:9092"
    ports:
      - "6000:6000"
      - "6001:6001"
      - "6002:6002"
      - "7001:7001"
    depends_on:
      - kafka
    networks:
      - r4f_net
    command: bash -c "sleep 5 && ./wait-for-it.sh kafka:9092 -t 120 && sleep 1; ./zerospike"

  bidder:
    image: rtb4free/bidder
    environment:
      # GDPR mode - set to true if operating inside a region that enforces GDPR
      GDPR_MODE: "false"
      # The Kafka setup - all of the channels which to deliver events
      BROKERLIST: "kafka:9092"
      BIDSCHANNEL: "kafka://[$$BROKERLIST]&topic=bids"
      WINSCHANNEL: "kafka://[$$BROKERLIST]&topic=wins"
      REQUESTSCHANNEL: "kafka://[$$BROKERLIST]&topic=requests"
      CLICKSCHANNEL: "kafka://[$$BROKERLIST]&topic=clicks"
      PIXELSCHANNEL: "kafka://[$$BROKERLIST]&topic=pixels"
      VIDEOEVENTSCHANNEL: "kafka://[$$BROKERLIST]&topic=videoevents"
      POSTBACKEVENTSCHANNEL: "kafka://[$$BROKERLIST]&topic=postbackevents"
      STATUSCHANNEL: "kafka://[$$BROKERLIST]&topic=status"
      REASONSCHANNEL: "kafka://[$$BROKERLIST]&topic=reasons"
      LOGCHANNEL: "kafka://[$$BROKERLIST]&topic=logs"
      # If using Amazon S3 to store data, enter configuration settings below
      S3BUCKET: ""
      S3REGION: ""
      S3SECRETKEY: ""
      S3ACCESSKEY: ""
      AWSACCESSKEY: ""
      AWSSECRETKEY: ""
      AWSREGION: ""
      # Enter SSP information below
      GOOGLE_EKEY: ""
      GOOGLE_IKEY: ""
      OPENX_EKEY: ""
      OPENX_IKEY: ""
      ADX_EKEY:   ""
      ADX_IKEY:   ""
      BIDSWITCH_ID: "1234"
      # Enter information about how to access
      PUBSUB: "zerospike"
      EXTERNAL: "http://localhost:8080"
      ADMINPORT: "0"
      ACCOUNTING: "accountingsystem"
      FREQGOV: "false"
      INDEXPAGE: "/index.html"
    ports:
      - "8080:8080"
      - "8155:8155"
      - "7379:7379"
      - "7000:7000"
    depends_on:
      - kafka
      - zerospike
    networks:
      - r4f_net
    command: bash -c "sleep 5 && ./wait-for-it.sh kafka:9092 -t 120 && ./wait-for-it.sh zerospike:6000 -t 120 && sleep 1; ./rtb4free"

  # Enable if you'd like to use the bidding simulator to test connections
  # simulator:
  #   image: rtb4free/bidder
  #   environment:
  #     BIDDER: "bidder:8080"
  #     WIN:    "10"
  #     PIXEL:  "95"
  #     CLICK:  "2"
  #     SLEEP:  "100"
  #     SILENT: "-silent"
  #   networks:
  #     - r4f_net
  #   command: bash -c "./wait-for-it.sh bidder:8080 -t 120 && sleep 60;  ./load-elastic -host $$BIDDER -win $$WIN -pixel $$PIXEL -click $$CLICK -sleep $$SLEEP"

networks:
  r4f_net:
    name: rtb4free_network
